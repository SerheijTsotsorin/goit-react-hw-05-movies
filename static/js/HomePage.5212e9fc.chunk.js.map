{"version":3,"file":"static/js/HomePage.5212e9fc.chunk.js","mappings":"qNAGaA,EAAQC,EAAAA,GAAAA,GAAH,iDAILC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,mG,SC8BrB,EAjCmB,SAAC,GAAqB,IAAnBG,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACrBC,GAAWC,EAAAA,EAAAA,MACjB,MAAa,SAATF,GAEA,iCACE,SAACL,EAAD,8BACA,wBACGI,EAAMI,KAAI,SAAAC,GAAI,OACb,yBACE,UAACP,EAAD,CAAUQ,GAAE,iBAAYD,EAAKE,IAA7B,UACGF,EAAKG,eAAgB,QAFjBH,EAAKE,YAUX,WAATN,GAEA,wBACGD,EAAMI,KAAI,SAAAC,GAAI,OACb,yBACE,SAACP,EAAD,CAAUQ,GAAID,EAAKE,GAAGE,WAAYC,MAAO,CAAET,KAAMC,GAAjD,SACGG,EAAKG,kBAFDH,EAAKE,cAJtB,I,0MCfII,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEoBC,IAAAA,IAAA,sCAAyCF,IAF7D,cAEGG,EAFH,yBAGIA,EAASC,KAAKC,SAHlB,gCAKHC,QAAQC,IAAR,MALG,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gGAEoBP,IAAAA,IAAA,gCACIF,EADJ,kBACqBS,IAHzC,cAEGN,EAFH,yBAKIA,EAASC,KAAKC,SALlB,gCAOHC,QAAQC,IAAR,MAPG,gFAWA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bd,GAA/B,gGAEoBM,IAAAA,IAAA,iBACXN,EADW,oBACGI,EADH,oBAFpB,cAEGG,EAFH,yBAKIA,EAASC,MALb,gCAOHE,QAAQC,IAAR,MAPG,gFAWA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAiCf,GAAjC,gGAEoBM,IAAAA,IAAA,iBACXN,EADW,4BACWI,EADX,oBAFpB,cAEGG,EAFH,yBAKIA,EAASC,KAAKQ,MALlB,gCAOHN,QAAQC,IAAR,MAPG,gFAWA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAkCjB,GAAlC,gGAEoBM,IAAAA,IAAA,iBACXN,EADW,4BACWI,EADX,2BAFpB,cAEGG,EAFH,yBAKIA,EAASC,MALb,gCAOHE,QAAQC,IAAR,MAPG,gFA5CPL,IAAAA,SAAAA,QAAyB,gC,uHCgCzB,UAlCiB,WACf,OAA0CY,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,oGAEIH,EAAU,WAFd,UAGwBjB,EAAAA,EAAAA,MAHxB,OAGUZ,EAHV,OAII2B,EAAiB3B,GACjB6B,EAAU,YALd,gDAOIA,EAAU,YACVE,EAAS,KAAME,SARnB,0DADc,uBAAC,WAAD,wBAYdC,KACC,IAEY,SAAXN,GACK,qCAEM,YAAXA,GACK,SAAC,IAAD,IAEM,aAAXA,GACK,SAAC,IAAD,CAAW5B,MAAO0B,EAAezB,KAAK,SAGhC,aAAX2B,GACK,wBAAKE,SADd","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","services/MovieAPI.jsx","view/HomePage.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link} from \"react-router-dom\";\n\nexport const Title = styled.h1`\n    margin-bottom:30px;\n`;\n\nexport const ItemLink = styled(Link)`\ndisplay: block;\nmargin-bottom: 10px;\ncolor: darkblue;\nfont-size: 18px;\n`;","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Title, ItemLink } from './MovieList.styled';\n\nconst MoviesList = ({ films, from }) => {\n  const location = useLocation();\n  if (from === 'home') {\n    return (\n      <>\n        <Title>Trending Films</Title>\n        <ul>\n          {films.map(film => (\n            <li key={film.id}>\n              <ItemLink to={`movies/${film.id}`}>\n                {film.original_title}{' '}\n              </ItemLink>\n            </li>\n          ))}\n        </ul>\n      </>\n    );\n  }\n  if (from === 'movies') {\n    return (\n      <ul>\n        {films.map(film => (\n          <li key={film.id}>\n            <ItemLink to={film.id.toString()} state={{ from: location }}>\n              {film.original_title}\n            </ItemLink>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n};\n\nexport default MoviesList;\n\nMoviesList.propTypes = {\n  films: PropTypes.array.isRequired,\n  from: PropTypes.string.isRequired,\n};\n","// Ключ API (v3 auth)\n// e17c0253c8740e62872e4c433f2396d4\n// Пример API-запроса\n// https://api.themoviedb.org/3/movie/550?api_key=e17c0253c8740e62872e4c433f2396d4\n\nimport axios from 'axios';\n\nconst API_KEY = 'e17c0253c8740e62872e4c433f2396d4';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const response = await axios.get(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesByName(name) {\n  try {\n    const response = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${name}`\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesById(id) {\n  try {\n    const response = await axios.get(\n      `/movie/${id}?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesActors(id) {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchMoviesReviews(id) {\n  try {\n    const response = await axios.get(\n      `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from '../services/MovieAPI';\nimport Loader from '../components/Loader/Loader';\n\nimport MovieList from '../components/MovieList/MovieList';\n\nconst HomePage = () => {\n  const [trendingFilms, setTrendingFilms] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchFilms() {\n      try {\n        setStatus('pending');\n        const films = await fetchTrendingMovies();\n        setTrendingFilms(films);\n        setStatus('resolved');\n      } catch (error) {\n        setStatus('rejected');\n        setError(error.message);\n      }\n    }\n    fetchFilms();\n  }, []);\n\n  if (status === 'idle') {\n    return <p>Try later</p>;\n  }\n  if (status === 'pending') {\n    return <Loader />;\n  }\n  if (status === 'resolved') {\n    return <MovieList films={trendingFilms} from=\"home\" />;\n  }\n\n  if (status === 'rejected') {\n    return <h2>{error}</h2>;\n  }\n};\nexport default HomePage;\n"],"names":["Title","styled","ItemLink","Link","films","from","location","useLocation","map","film","to","id","original_title","toString","state","API_KEY","fetchTrendingMovies","axios","response","data","results","console","log","fetchMoviesByName","name","fetchMoviesById","fetchMoviesActors","cast","fetchMoviesReviews","useState","trendingFilms","setTrendingFilms","status","setStatus","error","setError","useEffect","message","fetchFilms"],"sourceRoot":""}